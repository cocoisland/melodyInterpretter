{"ast":null,"code":"var _jsxFileName = \"/home/tt/repo/melodyInterpretter/Front-End/src/components/ToneJS/index.js\";\nimport React, { Component } from \"react\";\nimport Midi from \"@tonejs/midi\";\nimport \"@tonejs/ui\";\nimport Tone from \"tone\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction fileDrop() {\n  if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n    document.querySelector(\"#FileDrop #Text\").textContent = \"Reading files not supported by this browser\";\n  } else {\n    document.querySelector(\"#FileDrop input\").addEventListener(\"change\", e => {\n      //get the files\n      const files = e.target.files;\n\n      if (files.length > 0) {\n        const file = files[0];\n        var msg = \"Hit  Play  below to play := \" + file.name;\n        document.querySelector(\"#FileDrop #Text\").textContent = msg;\n        parseFile(file);\n      }\n    });\n  }\n}\n\nlet currentMidi = null;\n\nfunction parseFile(file) {\n  //read the file\n  const reader = new FileReader();\n\n  reader.onload = function (e) {\n    const midi = new Midi(e.target.result);\n    currentMidi = midi;\n  };\n\n  reader.readAsArrayBuffer(file);\n}\n\nclass ToneJS extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fileDropper = () => {\n      fileDrop();\n      this.setState(prevState => ({\n        isDisabled: !prevState.isDisabled\n      }));\n    };\n\n    this.state = {\n      isToggle: true,\n      isDisabled: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.synth = null;\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggle: !state.isToggle\n    }));\n    const playing = this.state.isToggle;\n    console.log('here', currentMidi, playing);\n\n    if (currentMidi) {\n      if (playing) {\n        currentMidi.tracks.forEach(track => {\n          //create a synth for each track\n          this.synth = new Tone.PolySynth(10, Tone.Synth, {\n            envelope: {\n              attack: 0.02,\n              decay: 0.1,\n              sustain: 0.3,\n              release: 1\n            }\n          }).toMaster();\n          track.notes.forEach(note => {\n            //console.log('inside track note',note.name,note.duration,note.time, note.velocity)\n            this.synth.triggerAttackRelease(note.name, note.duration, note.time, note.velocity);\n          });\n        });\n      } else {\n        this.synth.disconnect(); //this.synth.dispose()\n      }\n    }\n  }\n\n  render() {\n    const enabledButton = this.state.isDisabled ? true : false;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"style\", {\n      type: \"text/css\",\n      dangerouslySetInnerHTML: {\n        __html: \"\\n\\t\\t#FileDrop{\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 100px;\\n\\t\\t\\tborder: 2px dashed black;\\n\\t\\t\\tcolor: black;\\n\\t\\t\\tmargin: 20px auto;\\n\\t\\t}\\n\\t\\t#FileDrop.Hover{\\n\\t\\t\\tbackground-color: black;\\n\\t\\t\\tcolor: white;\\n\\t\\t}\\n\\t\\t#FileDrop input {\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 100%;\\n\\t\\t\\topacity: 0;\\n\\t\\t\\tleft: 0px;\\n\\t\\t\\ttop: 0px;\\n\\t\\t}\\n\\t\\t#FileDrop #Text {\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 20px;\\n\\t\\t\\tline-height: 20px;\\n\\t\\t\\tleft: 0px;\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\ttransform: translate(0, -50%);\\n\\t\\t\\ttext-align: center;\\n\\t\\t}\\n\\t\\ttextarea {\\n\\t\\t\\tfont-family: monospace;\\n\\t\\t\\theight: 300px;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tdisplay: inline-block;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\tfloat: left;\\n\\t\\t}\\n\\t\\t#Results {\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tmargin: 10px auto;\\n\\t\\t}\\n\\t\\t#Description {\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\theight: 40px;\\n\\t\\t\\tfont-size: 16px;\\n\\t\\t\\tmargin: 10px auto;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t}\\n\\t\\ttone-play-toggle {\\n\\t\\t\\tmargin-top: 10px;\\n\\t\\t}\\n\\t\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"tone-content\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"FileDrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Click here to load a midi file\"), React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"audio/midi\",\n      onClick: this.fileDropper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"playStop\",\n      disabled: enabledButton,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.isToggle ? 'Play' : 'Stop')));\n  }\n\n}\n\nexport default ToneJS;","map":{"version":3,"sources":["/home/tt/repo/melodyInterpretter/Front-End/src/components/ToneJS/index.js"],"names":["React","Component","Midi","Tone","Button","fileDrop","window","File","FileReader","FileList","Blob","document","querySelector","textContent","addEventListener","e","files","target","length","file","msg","name","parseFile","currentMidi","reader","onload","midi","result","readAsArrayBuffer","ToneJS","constructor","props","fileDropper","setState","prevState","isDisabled","state","isToggle","handleClick","bind","synth","playing","console","log","tracks","forEach","track","PolySynth","Synth","envelope","attack","decay","sustain","release","toMaster","notes","note","triggerAttackRelease","duration","time","velocity","disconnect","render","enabledButton","__html"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport  Midi  from \"@tonejs/midi\"\nimport { } from \"@tonejs/ui\"\nimport Tone from \"tone\"\nimport Button from \"@material-ui/core/Button\"\nfunction fileDrop() {\n  if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n    document.querySelector(\"#FileDrop #Text\").textContent = \"Reading files not supported by this browser\";\n  } else {\n    document.querySelector(\"#FileDrop input\").addEventListener(\"change\", e => {\n      //get the files\n      const files = e.target.files\n      if (files.length > 0){\n        const file = files[0]\n        var msg = \"Hit  Play  below to play := \" + file.name\n        document.querySelector(\"#FileDrop #Text\").textContent = msg\n        parseFile(file)\n      }\n    })\n  }\n}\nlet currentMidi = null\nfunction parseFile(file){\n  //read the file\n  const reader = new FileReader()\n  reader.onload = function(e){\n    const midi = new Midi(e.target.result)\n    currentMidi = midi\n    \n  }\n  reader.readAsArrayBuffer(file)\n}\nclass ToneJS extends Component {\n  constructor(props){\n    super(props)\n    this.state = { \n      isToggle : true,\n      isDisabled: true }\n    this.handleClick = this.handleClick.bind(this);\n    this.synth = null;\n  }\n  handleClick() {\n    this.setState(state => ({ isToggle: !state.isToggle}));\n    const playing = this.state.isToggle;\nconsole.log('here',currentMidi, playing)\n    if (currentMidi){\n      if ( playing ) { \n      currentMidi.tracks.forEach(track => {\n        //create a synth for each track\n        this.synth = new Tone.PolySynth(10, Tone.Synth, {\n          envelope : {\n            attack : 0.02,\n            decay : 0.1,\n            sustain : 0.3,\n            release : 1\n          }\n        }).toMaster()\n        track.notes.forEach(note => {\n          //console.log('inside track note',note.name,note.duration,note.time, note.velocity)\n          this.synth.triggerAttackRelease(note.name, note.duration, note.time, note.velocity)\n        })\n      })\n      } else {\n        this.synth.disconnect()\n        //this.synth.dispose()\n      } \n    }\n  } \n  fileDropper = () => {\n    fileDrop()\n    this.setState(prevState => ({\n      isDisabled: !prevState.isDisabled,\n    }));\n  } \n  render() {\n    const enabledButton = this.state.isDisabled ? true : false;\n    return (\n        <div>\n<style type=\"text/css\" dangerouslySetInnerHTML={{__html: \"\\n\\t\\t#FileDrop{\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 100px;\\n\\t\\t\\tborder: 2px dashed black;\\n\\t\\t\\tcolor: black;\\n\\t\\t\\tmargin: 20px auto;\\n\\t\\t}\\n\\t\\t#FileDrop.Hover{\\n\\t\\t\\tbackground-color: black;\\n\\t\\t\\tcolor: white;\\n\\t\\t}\\n\\t\\t#FileDrop input {\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 100%;\\n\\t\\t\\topacity: 0;\\n\\t\\t\\tleft: 0px;\\n\\t\\t\\ttop: 0px;\\n\\t\\t}\\n\\t\\t#FileDrop #Text {\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 20px;\\n\\t\\t\\tline-height: 20px;\\n\\t\\t\\tleft: 0px;\\n\\t\\t\\ttop: 50%;\\n\\t\\t\\ttransform: translate(0, -50%);\\n\\t\\t\\ttext-align: center;\\n\\t\\t}\\n\\t\\ttextarea {\\n\\t\\t\\tfont-family: monospace;\\n\\t\\t\\theight: 300px;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tdisplay: inline-block;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\tfloat: left;\\n\\t\\t}\\n\\t\\t#Results {\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tmargin: 10px auto;\\n\\t\\t}\\n\\t\\t#Description {\\n\\t\\t\\tposition: relative;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\theight: 40px;\\n\\t\\t\\tfont-size: 16px;\\n\\t\\t\\tmargin: 10px auto;\\n\\t\\t\\tfont-family: sans-serif;\\n\\t\\t}\\n\\t\\ttone-play-toggle {\\n\\t\\t\\tmargin-top: 10px;\\n\\t\\t}\\n\\t\" }} /> \n          \n          <tone-content>\n            <div id=\"FileDrop\">\n              <div id=\"Text\">\n                Click here to load a midi file\n              </div>\n              <input type=\"file\" accept=\"audio/midi\"  onClick={this.fileDropper}/>\n          \n            </div>\n            \n            \n            <Button id='playStop'  disabled={enabledButton}\n            variant=\"contained\" color=\"primary\" onClick={() => this.handleClick()}>\n            {this.state.isToggle ? 'Play' :'Stop' }\n        </Button>\n         \n          </tone-content>\n        </div>\n      );\n  }\n}\n \nexport default ToneJS;"]},"metadata":{},"sourceType":"module"}