{"ast":null,"code":"var _jsxFileName = \"/home/tt/repo/melodyInterpretter/Front-End/src/components/MidiPiano.js\";\nimport React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport './styles.css'; // webkitAudioContext fallback needed to support Safari\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\nconst noteRange = {\n  first: MidiNumbers.fromNote('c3'),\n  last: MidiNumbers.fromNote('f5')\n};\n/*\nconst keyboardShortcuts = KeyboardShortcuts.create({\n  firstNote: noteRange.first,\n  lastNote: noteRange.last,\n  keyboardConfig: KeyboardShortcuts.HOME_ROW,\n});\n*/\n\nconst MidiPiano = () => {\n  /*\n      const firstNote = MidiNumbers.fromNote('c3');\n      const lastNote = MidiNumbers.fromNote('f5');\n      const keyboardShortcuts = KeyboardShortcuts.create({\n          firstNote: firstNote,\n          lastNote: lastNote,\n          keyboardConfig: KeyboardShortcuts.HOME_ROW,\n      });\n  */\n  return (\n    /*\n    <div>\n        <Piano\n            noteRange={{ first: firstNote, last: lastNote }}\n            playNote={(midiNumber) => {\n                console.log(midiNumber.MidiNumbers)\n                //import('./moduleA')\n                //.then(({ moduleA }) => {\n                    // Use moduleA\n                //})\n                //.catch(err => {\n                    // Handle failure\n                //});\n                \n                // Play a given note - see notes below\n                //synth.play(midiNumber)\n            }}\n            stopNote={(midiNumber) => {\n                // Stop playing a given note - see notes below\n            }}\n            width={1000}\n            keyboardShortcuts={keyboardShortcuts}\n        />\n        */\n    React.createElement(\"div\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Piano with custom styling - see styles.css\"), React.createElement(ResponsivePiano, {\n      className: \"PianoDarkTheme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) //</div>\n\n  );\n};\n\nfunction ResponsivePiano(props) {\n  return React.createElement(DimensionsProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, ({\n    containerWidth,\n    containerHeight\n  }) => React.createElement(SoundfontProvider, {\n    instrumentName: \"acoustic_grand_piano\",\n    audioContext: audioContext,\n    hostname: soundfontHostname,\n    render: ({\n      isLoading,\n      playNote,\n      stopNote\n    }) => React.createElement(Piano, Object.assign({\n      noteRange: noteRange,\n      width: containerWidth,\n      playNote: playNote,\n      stopNote: stopNote,\n      disabled: isLoading,\n      activeNotes: [44, 45, 51]\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nexport default MidiPiano;","map":{"version":3,"sources":["/home/tt/repo/melodyInterpretter/Front-End/src/components/MidiPiano.js"],"names":["React","Piano","MidiNumbers","DimensionsProvider","SoundfontProvider","audioContext","window","AudioContext","webkitAudioContext","soundfontHostname","noteRange","first","fromNote","last","MidiPiano","ResponsivePiano","props","containerWidth","containerHeight","isLoading","playNote","stopNote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,aAAnC;AACA,OAAO,6BAAP;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,cAAP,C,CAEA;;AACA,MAAMC,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAP,IAAuBD,MAAM,CAACE,kBAAnC,GAArB;AACA,MAAMC,iBAAiB,GAAG,uCAA1B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAET,WAAW,CAACU,QAAZ,CAAqB,IAArB,CADS;AAEhBC,EAAAA,IAAI,EAAEX,WAAW,CAACU,QAAZ,CAAqB,IAArB;AAFU,CAAlB;AAIA;;;;;;;;AAQA,MAAME,SAAS,GAAG,MAAM;AACxB;;;;;;;;;AASI;AACI;;;;;;;;;;;;;;;;;;;;;;;;AAwBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,EAEI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAzBR,CA6BI;;AA7BJ;AA+BH,CAzCD;;AA2CA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,GAAD,KACC,oBAAC,iBAAD;AACE,IAAA,cAAc,EAAC,sBADjB;AAEE,IAAA,YAAY,EAAEb,YAFhB;AAGE,IAAA,QAAQ,EAAEI,iBAHZ;AAIE,IAAA,MAAM,EAAE,CAAC;AAAEU,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,KAAD,KACN,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEX,SADb;AAEE,MAAA,KAAK,EAAEO,cAFT;AAGE,MAAA,QAAQ,EAAEG,QAHZ;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,QAAQ,EAAEF,SALZ;AAME,MAAA,WAAW,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AANf,OAOMH,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAsBD;;AAEH,eAAeF,SAAf","sourcesContent":["import React from 'react'\nimport { Piano, MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport './styles.css';\n\n// webkitAudioContext fallback needed to support Safari\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\n\nconst noteRange = {\n  first: MidiNumbers.fromNote('c3'),\n  last: MidiNumbers.fromNote('f5'),\n};\n/*\nconst keyboardShortcuts = KeyboardShortcuts.create({\n  firstNote: noteRange.first,\n  lastNote: noteRange.last,\n  keyboardConfig: KeyboardShortcuts.HOME_ROW,\n});\n*/\n\nconst MidiPiano = () => {\n/*\n    const firstNote = MidiNumbers.fromNote('c3');\n    const lastNote = MidiNumbers.fromNote('f5');\n    const keyboardShortcuts = KeyboardShortcuts.create({\n        firstNote: firstNote,\n        lastNote: lastNote,\n        keyboardConfig: KeyboardShortcuts.HOME_ROW,\n    });\n*/\n    return ( \n        /*\n        <div>\n            <Piano\n                noteRange={{ first: firstNote, last: lastNote }}\n                playNote={(midiNumber) => {\n                    console.log(midiNumber.MidiNumbers)\n                    //import('./moduleA')\n                    //.then(({ moduleA }) => {\n                        // Use moduleA\n                    //})\n                    //.catch(err => {\n                        // Handle failure\n                    //});\n                    \n                    // Play a given note - see notes below\n                    //synth.play(midiNumber)\n                }}\n                stopNote={(midiNumber) => {\n                    // Stop playing a given note - see notes below\n                }}\n                width={1000}\n                keyboardShortcuts={keyboardShortcuts}\n            />\n            */\n            <div className=\"mt-5\">\n                <p>Piano with custom styling - see styles.css</p>\n                <ResponsivePiano className=\"PianoDarkTheme\" />\n            </div>\n        //</div>\n     );\n}\n \nfunction ResponsivePiano(props) {\n    return (\n      <DimensionsProvider>\n        {({ containerWidth, containerHeight }) => (\n          <SoundfontProvider\n            instrumentName=\"acoustic_grand_piano\"\n            audioContext={audioContext}\n            hostname={soundfontHostname}\n            render={({ isLoading, playNote, stopNote }) => (\n              <Piano\n                noteRange={noteRange}\n                width={containerWidth}\n                playNote={playNote}\n                stopNote={stopNote}\n                disabled={isLoading}\n                activeNotes={[44,45,51]}\n                {...props}\n              />\n            )}\n          />\n        )}\n      </DimensionsProvider>\n    );\n  }\n  \nexport default MidiPiano;"]},"metadata":{},"sourceType":"module"}